import { jsx as s, jsxs as C } from "react/jsx-runtime";
import { useCallback as S, forwardRef as J, useRef as K, useState as g, useEffect as w, useImperativeHandle as Q } from "react";
import { GlobalWorkerOptions as L, getDocument as X } from "pdfjs-dist";
import { PDFDocument as Y, PDFTextField as $, PDFCheckBox as ee, PDFDropdown as te } from "pdf-lib";
import { useReactToPrint as oe } from "react-to-print";
const ne = "_rootContainer_1ye4q_1", ae = "_toolbarContainer_1ye4q_11", se = "_toolbarButton_1ye4q_23", re = "_svgIcon_1ye4q_42", ce = "_svgMediumIcon_1ye4q_49", ie = "_pdfContainer_1ye4q_56", le = "_pdfPageContainer_1ye4q_69", de = "_pdfSelect_1ye4q_73", pe = "_pdfInput_1ye4q_92", i = {
  rootContainer: ne,
  toolbarContainer: ae,
  toolbarButton: se,
  svgIcon: re,
  svgMediumIcon: ce,
  pdfContainer: ie,
  pdfPageContainer: le,
  pdfSelect: de,
  pdfInput: pe
}, ue = (l) => /* @__PURE__ */ s("svg", { ...l, children: /* @__PURE__ */ s("path", { d: "M3 8c0-.28.22-.5.5-.5h9a.5.5 0 010 1h-9A.5.5 0 013 8z" }) }), fe = (l) => /* @__PURE__ */ s("svg", { ...l, children: /* @__PURE__ */ s("path", { d: "M8 2.5a.5.5 0 00-1 0V7H2.5a.5.5 0 000 1H7v4.5a.5.5 0 001 0V8h4.5a.5.5 0 000-1H8V2.5z" }) }), me = (l) => /* @__PURE__ */ s("svg", { ...l, children: /* @__PURE__ */ s(
  "path",
  {
    d: "M5 4.5C5 3.67 5.67 3 6.5 3h7c.83 0 1.5.67 1.5 1.5V5h.5A2.5 2.5 0 0118 7.5v5c0 .83-.67 1.5-1.5 1.5H15v1.5c0 .83-.67 1.5-1.5 1.5h-7A1.5 1.5 0 015 15.5V14H3.5A1.5 1.5 0 012 12.5v-5A2.5 2.5 0 014.5 5H5v-.5zM6 5h8v-.5a.5.5 0 00-.5-.5h-7a.5.5 0 00-.5.5V5zm-1 8v-1.5c0-.83.67-1.5 1.5-1.5h7c.83 0 1.5.67 1.5 1.5V13h1.5a.5.5 0 00.5-.5v-5c0-.83-.67-1.5-1.5-1.5h-11C3.67 6 3 6.67 3 7.5v5c0 .28.22.5.5.5H5zm1.5-2a.5.5 0 00-.5.5v4c0 .28.22.5.5.5h7a.5.5 0 00.5-.5v-4a.5.5 0 00-.5-.5h-7z"
  }
) }), he = (l, k = {}) => {
  const { onAfterPrint: p, onBeforePrint: x, onBeforeGetContent: P, onPrintError: u } = k, y = S(() => l.current, [l]);
  return oe({
    print: typeof window < "u" ? (f) => (f.contentWindow?.print(), Promise.resolve(!0)) : void 0,
    content: y,
    copyStyles: !0,
    removeAfterPrint: !1,
    onAfterPrint: p,
    onBeforePrint: x,
    onBeforeGetContent: P,
    onPrintError: u,
    pageStyle: `
      body {
        margin: 0px;
      }
      
      @page {
        size: A4;
      }
    
      @media all {
        .pagebreak {
          display: none;
        }
      }
    
      @media print {
        .pagebreak {
          page-break-before: always;
        }
      }
      
      @media print {
        body {
          position: absolute;
          top: 0px;
          left: 0px;
        }
        body * {
          visibility: visible !important;
        }
        .pagebreak {
          page-break-before: always;
        }
      }
    `
  });
}, ve = (l) => /* @__PURE__ */ C("svg", { ...l, children: [
  /* @__PURE__ */ s("path", { d: "M5 3a2 2 0 00-2 2v10c0 1.1.9 2 2 2h3l.06-.35.16-.65H6v-4.5c0-.28.22-.5.5-.5h5.44l1-1H6.5c-.83 0-1.5.67-1.5 1.5V16a1 1 0 01-1-1V5a1 1 0 011-1h1v2.5C6 7.33 6.67 8 7.5 8h4c.83 0 1.5-.67 1.5-1.5V4h.38a1 1 0 01.7.3l1.63 1.61a1 1 0 01.29.71V8c.34-.01.68.03 1 .13v-1.5a2 2 0 00-.59-1.42L14.8 3.59A2 2 0 0013.38 3H5zm2 3.5V4h5v2.5a.5.5 0 01-.5.5h-4a.5.5 0 01-.5-.5z" }),
  /* @__PURE__ */ s("path", { d: "M14.8 9.55l-4.82 4.83a2.2 2.2 0 00-.58 1.02l-.37 1.5a.89.89 0 001.08 1.07l1.5-.37c.38-.1.73-.3 1.01-.58l4.83-4.83a1.87 1.87 0 00-2.64-2.64z" })
] }), _ = [
  0.67,
  0.75,
  0.8,
  0.9,
  1,
  1.1,
  1.25,
  1.5,
  1.75,
  2,
  2.5,
  3,
  3.5,
  4
], B = "https://unpkg.com/pdfjs-dist/build/pdf.worker.min.mjs";
L.workerSrc = B;
const Pe = J(
  (l, k) => {
    const { src: p, workerSrc: x, onSave: P } = l, u = K(null), [y, F] = g(0), [f, I] = g(6), [h, A] = g(), [z, V] = g(!1), [b, E] = g(), [D, R] = g(!1), [j, M] = g(!1);
    w(() => {
      L.workerSrc = x || B;
    }, [x]), w(() => ((async () => {
      V(!1), A(await X(p).promise), V(!0);
    })(), () => {
      h && (h.destroy(), A(void 0), V(!1));
    }), [p]), w(() => {
      (async () => {
        if (h) {
          const t = await h.getFieldObjects(), e = [];
          R(!1);
          for (let a = 1; a <= h?.numPages; a++) {
            const r = await h.getPage(a), n = Object.values(t).flatMap(
              (c) => c.filter(
                (m) => m.editable && !m.hidden && // form field page index start from 0
                // while page proxy pageNumber index start from 1
                m.page === r.pageNumber - 1
              )
            );
            e.push({ proxy: r, fields: n });
          }
          E(e), R(!0);
        }
      })();
    }, [z]);
    const O = S(
      (o) => {
        let t = 0;
        b?.forEach((e) => {
          const a = e.proxy.getViewport({ scale: o }), r = e.proxy.getViewport({ scale: 1 }).width;
          r > t && (t = r);
          const n = u.current?.querySelector(
            "canvas#page_canvas_" + e.proxy.pageNumber
          );
          if (n) {
            const m = n.getContext("2d"), d = window.devicePixelRatio || 1;
            n.height = a.height * d, n.width = a.width * d, n.style.width = a.width + "px", n.style.height = a.height + "px", m && e.proxy.render({
              canvasContext: m,
              viewport: e.proxy.getViewport({
                scale: o * d
                // draw ratio pixels into Canvas
              })
            });
          }
          u.current?.querySelector(
            "div#page_div_container_" + e.proxy.pageNumber
          )?.querySelectorAll("input, select").forEach((m) => {
            const d = m, v = e.fields?.find((N) => N.name === d.name)?.rect?.map((N) => N * o);
            v && (d.style.left = v[0] + "px", d.style.top = a.height - v[3] + "px", d.style.width = v[2] - v[0] + "px", d.style.height = v[3] - v[1] + "px");
          });
        }), y === 0 && F(t);
      },
      // intend not include maxPageWidth, once the first loop set the max page width is enough
      // eslint-disable-next-line react-hooks/exhaustive-deps
      [b]
    );
    w(() => {
      D && O(_[f]);
    }, [D, O, f]);
    const q = S(
      (o) => {
        if (o && y) {
          const t = o / y;
          let e = 1 / 0, a;
          for (let r = 0; r < _.length; r++) {
            const n = Math.abs(t - _[r]);
            n < e && (e = n, a = r);
          }
          I(a || 6);
        }
      },
      [y]
    );
    w(() => {
      const o = () => {
        q(u?.current?.offsetWidth);
      };
      return window.addEventListener("resize", o), () => {
        window.removeEventListener("resize", o);
      };
    }, [q]);
    const H = () => {
      const o = u?.current?.querySelectorAll("input, select");
      return o ? Array.from(o).map((t) => {
        const e = t, a = t;
        let r = e.value;
        switch (e.type) {
          case "checkbox":
            r = e.checked ? "On" : "Off";
            break;
          case "combobox":
            r = a.options[a.selectedIndex].value;
            break;
        }
        return {
          [e.name]: r
        };
      }).reduce((t, e) => ({ ...t, ...e }), {}) : {};
    };
    Q(k, () => ({
      formFields: H()
    }));
    const W = he(u), U = () => {
      W();
    }, Z = (o, t) => {
      const e = document.createElement("a");
      e.href = window.URL.createObjectURL(o), e.download = t || "download.pdf", document.body.appendChild(e), e.click(), document.body.removeChild(e), window.URL.revokeObjectURL(e.href);
    }, T = async (o, t) => {
      try {
        const e = new Blob([o], { type: "application/pdf" }), { showSaveFilePicker: a } = window;
        if (a) {
          const n = await (await a({
            suggestedName: t,
            types: [
              {
                description: "PDF Documents",
                accept: {
                  "application/pdf": [".pdf"]
                }
              }
            ]
          })).createWritable();
          await n.write(e), await n.close();
        } else
          Z(e, t);
      } catch (e) {
        console.error(e);
      }
    }, G = async () => {
      M(!0);
      const o = await h?.getData();
      if (o) {
        const t = await Y.load(o), e = t.getForm();
        e.getDropdown;
        const a = H();
        if (e) {
          for (const n of e.getFields()) {
            const c = a[n.getName()];
            n instanceof $ ? n.setText(c) : n instanceof ee ? c === "On" ? n.check() : n.uncheck() : n instanceof te && n.select(c);
          }
          const r = await t.save();
          if (P)
            P(r, a);
          else {
            let n = "download.pdf";
            if (typeof p == "string") {
              const c = p;
              c.lastIndexOf("/") >= 0 && (n = c.substring(c.lastIndexOf("/") + 1));
            } else if (p instanceof URL) {
              const c = p.href;
              c.lastIndexOf("/") >= 0 && (n = c.substring(c.lastIndexOf("/") + 1));
            }
            await T(r, n || "download.pdf");
          }
        }
      }
      M(!1);
    };
    return !z || !D ? null : /* @__PURE__ */ C("div", { className: i.rootContainer, children: [
      /* @__PURE__ */ C("div", { className: i.toolbarContainer, children: [
        /* @__PURE__ */ s(
          "button",
          {
            className: i.toolbarButton,
            title: "Zoom Out",
            onClick: () => I(f - 1),
            disabled: f <= 0,
            type: "button",
            children: /* @__PURE__ */ s(ue, { className: i.svgIcon })
          }
        ),
        /* @__PURE__ */ s(
          "button",
          {
            title: "Zoom In",
            className: i.toolbarButton,
            onClick: () => I(f + 1),
            disabled: f >= _.length - 1,
            type: "button",
            children: /* @__PURE__ */ s(fe, { className: i.svgIcon })
          }
        ),
        /* @__PURE__ */ s(
          "button",
          {
            title: "Print",
            className: i.toolbarButton,
            onClick: U,
            type: "button",
            children: /* @__PURE__ */ s(me, { className: i.svgMediumIcon })
          }
        ),
        /* @__PURE__ */ s(
          "button",
          {
            title: "Save as",
            className: i.toolbarButton,
            onClick: G,
            type: "button",
            disabled: j,
            children: /* @__PURE__ */ s(ve, { className: i.svgMediumIcon })
          }
        )
      ] }),
      /* @__PURE__ */ s(
        "div",
        {
          ref: u,
          className: i.pdfContainer,
          children: b && b.length > 0 && b.filter((o) => !o.proxy?.destroyed).map((o) => /* @__PURE__ */ C(
            "div",
            {
              id: "page_div_container_" + o.proxy.pageNumber,
              className: i.pdfPageContainer,
              children: [
                /* @__PURE__ */ s("canvas", { id: "page_canvas_" + o.proxy.pageNumber }),
                o.fields && o.fields.map((t) => t.type === "combobox" ? /* @__PURE__ */ s(
                  "select",
                  {
                    name: t.name,
                    title: t.name,
                    defaultValue: t.defaultValue,
                    className: i.pdfSelect,
                    children: t.items?.map((e) => /* @__PURE__ */ s(
                      "option",
                      {
                        value: e.exportValue,
                        children: e.displayValue
                      },
                      e.exportValue
                    ))
                  },
                  t.name
                ) : /* @__PURE__ */ s(
                  "input",
                  {
                    type: t.type,
                    defaultValue: t.defaultValue,
                    name: t.name,
                    className: i.pdfInput
                  },
                  t.name
                ))
              ]
            },
            "page_" + o.proxy.pageNumber
          ))
        }
      )
    ] });
  }
);
export {
  Pe as PDFEditor
};
